{"name": "Тест закрытия всплывающего окна по клику на крестик", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=126.0.6478.62)\nStacktrace:\n\tGetHandleVerifier [0x00007FF663E0EEA2+31554]\n\t(No symbol) [0x00007FF663D87ED9]\n\t(No symbol) [0x00007FF663C48559]\n\t(No symbol) [0x00007FF663C997C2]\n\t(No symbol) [0x00007FF663C8C151]\n\t(No symbol) [0x00007FF663CBD02A]\n\t(No symbol) [0x00007FF663C8BA76]\n\t(No symbol) [0x00007FF663CBD240]\n\t(No symbol) [0x00007FF663CDC977]\n\t(No symbol) [0x00007FF663CBCDD3]\n\t(No symbol) [0x00007FF663C8A33B]\n\t(No symbol) [0x00007FF663C8AED1]\n\tGetHandleVerifier [0x00007FF664118B1D+3217341]\n\tGetHandleVerifier [0x00007FF664165AE3+3532675]\n\tGetHandleVerifier [0x00007FF66415B0E0+3489152]\n\tGetHandleVerifier [0x00007FF663EBE776+750614]\n\t(No symbol) [0x00007FF663D9375F]\n\t(No symbol) [0x00007FF663D8EB14]\n\t(No symbol) [0x00007FF663D8ECA2]\n\t(No symbol) [0x00007FF663D7E16F]\n\tBaseThreadInitThunk [0x00007FF839587344+20]\n\tRtlUserThreadStart [0x00007FF83997CC91+33]", "trace": "self = <tests.test_main_page.TestMainPage object at 0x0000023FE25588F0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"53e7af62ecf012ba1b61f031abb17203\")>\n\n    @allure.title('Тест закрытия всплывающего окна по клику на крестик')\n    def test_close_ingredient_modal(self, driver):\n        main_page = MainPage(driver)\n>       main_page.click_on_ingredient()\n\ntests\\test_main_page.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:38: in click_on_ingredient\n    self.click_on_element(MainPageLocators.bun)\npages\\base_page.py:15: in click_on_element\n    self.driver.find_element(*locator).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023FE2627200>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF663D7E16F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF839587344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF83997CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=126.0.6478.62)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF663E0EEA2+31554]\nE       \t(No symbol) [0x00007FF663D87ED9]\nE       \t(No symbol) [0x00007FF663C48559]\nE       \t(No symbol) [0x00007FF663C997C2]\nE       \t(No symbol) [0x00007FF663C8C151]\nE       \t(No symbol) [0x00007FF663CBD02A]\nE       \t(No symbol) [0x00007FF663C8BA76]\nE       \t(No symbol) [0x00007FF663CBD240]\nE       \t(No symbol) [0x00007FF663CDC977]\nE       \t(No symbol) [0x00007FF663CBCDD3]\nE       \t(No symbol) [0x00007FF663C8A33B]\nE       \t(No symbol) [0x00007FF663C8AED1]\nE       \tGetHandleVerifier [0x00007FF664118B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF664165AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF66415B0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF663EBE776+750614]\nE       \t(No symbol) [0x00007FF663D9375F]\nE       \t(No symbol) [0x00007FF663D8EB14]\nE       \t(No symbol) [0x00007FF663D8ECA2]\nE       \t(No symbol) [0x00007FF663D7E16F]\nE       \tBaseThreadInitThunk [0x00007FF839587344+20]\nE       \tRtlUserThreadStart [0x00007FF83997CC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException"}, "steps": [{"name": "Клик на ингредиент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=126.0.6478.62)\nStacktrace:\n\tGetHandleVerifier [0x00007FF663E0EEA2+31554]\n\t(No symbol) [0x00007FF663D87ED9]\n\t(No symbol) [0x00007FF663C48559]\n\t(No symbol) [0x00007FF663C997C2]\n\t(No symbol) [0x00007FF663C8C151]\n\t(No symbol) [0x00007FF663CBD02A]\n\t(No symbol) [0x00007FF663C8BA76]\n\t(No symbol) [0x00007FF663CBD240]\n\t(No symbol) [0x00007FF663CDC977]\n\t(No symbol) [0x00007FF663CBCDD3]\n\t(No symbol) [0x00007FF663C8A33B]\n\t(No symbol) [0x00007FF663C8AED1]\n\tGetHandleVerifier [0x00007FF664118B1D+3217341]\n\tGetHandleVerifier [0x00007FF664165AE3+3532675]\n\tGetHandleVerifier [0x00007FF66415B0E0+3489152]\n\tGetHandleVerifier [0x00007FF663EBE776+750614]\n\t(No symbol) [0x00007FF663D9375F]\n\t(No symbol) [0x00007FF663D8EB14]\n\t(No symbol) [0x00007FF663D8ECA2]\n\t(No symbol) [0x00007FF663D7E16F]\n\tBaseThreadInitThunk [0x00007FF839587344+20]\n\tRtlUserThreadStart [0x00007FF83997CC91+33]\n\n", "trace": "  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\pages\\main_page.py\", line 38, in click_on_ingredient\n    self.click_on_element(MainPageLocators.bun)\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\pages\\base_page.py\", line 15, in click_on_element\n    self.driver.find_element(*locator).click()\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Клик по элементу", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=126.0.6478.62)\nStacktrace:\n\tGetHandleVerifier [0x00007FF663E0EEA2+31554]\n\t(No symbol) [0x00007FF663D87ED9]\n\t(No symbol) [0x00007FF663C48559]\n\t(No symbol) [0x00007FF663C997C2]\n\t(No symbol) [0x00007FF663C8C151]\n\t(No symbol) [0x00007FF663CBD02A]\n\t(No symbol) [0x00007FF663C8BA76]\n\t(No symbol) [0x00007FF663CBD240]\n\t(No symbol) [0x00007FF663CDC977]\n\t(No symbol) [0x00007FF663CBCDD3]\n\t(No symbol) [0x00007FF663C8A33B]\n\t(No symbol) [0x00007FF663C8AED1]\n\tGetHandleVerifier [0x00007FF664118B1D+3217341]\n\tGetHandleVerifier [0x00007FF664165AE3+3532675]\n\tGetHandleVerifier [0x00007FF66415B0E0+3489152]\n\tGetHandleVerifier [0x00007FF663EBE776+750614]\n\t(No symbol) [0x00007FF663D9375F]\n\t(No symbol) [0x00007FF663D8EB14]\n\t(No symbol) [0x00007FF663D8ECA2]\n\t(No symbol) [0x00007FF663D7E16F]\n\tBaseThreadInitThunk [0x00007FF839587344+20]\n\tRtlUserThreadStart [0x00007FF83997CC91+33]\n\n", "trace": "  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\pages\\base_page.py\", line 15, in click_on_element\n    self.driver.find_element(*locator).click()\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\kolya\\PycharmProjects\\Diplom_Polina_Ziuzina_8\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "['xpath', \"//img[@alt='Флюоресцентная булка R2-D3']\"]"}], "start": 1719663221197, "stop": 1719663221299}], "start": 1719663221197, "stop": 1719663221378}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1719663221174, "stop": 1719663221389, "uuid": "87a2b1fc-1977-490b-9b8c-2f6a8ea09a84", "historyId": "ef1afb5f2d83c6b79bc5855add5faca7", "testCaseId": "555d5894ba44ea43076dcfa6e3ce586f", "fullName": "tests.test_main_page.TestMainPage#test_close_ingredient_modal", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "LAPTOP-SK1MV6LR"}, {"name": "thread", "value": "1384-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}